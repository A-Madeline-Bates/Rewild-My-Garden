{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { WildlifeAdviceDialogComponent } from \"../wildlife-advice-dialog/wildlife-advice-dialog.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/button-toggle\";\nexport let WildlifeAdviceGenericComponent = /*#__PURE__*/(() => {\n  class WildlifeAdviceGenericComponent {\n    constructor(dialog) {\n      this.dialog = dialog;\n      this.adviceGenericObject = {\n        Header: \"\",\n        \"Hedgehogs\": \"\",\n        \"Birds\": \"\",\n        \"Insects\": \"\",\n        \"Amphibians\": \"\",\n        Justification: \"\",\n        BodyText: \"\",\n        Pathname: \"\",\n        Name: \"\",\n        Username: \"\",\n        Copyright: \"\",\n        Link: \"\"\n      }; //Code used to output when someone wants to save a piece of advice\n\n      this.isChecked = false;\n      this.newSaveEvent = new EventEmitter();\n      this.newRemoveEvent = new EventEmitter();\n    } //this function is passed the correct month data through the HTML\n\n\n    openDialog(adviceGenericObject) {\n      const dialogRef = this.dialog.open(WildlifeAdviceDialogComponent, {\n        height: \"auto\",\n        width: \"750px\",\n        data: adviceGenericObject\n      });\n    } // make changes to the array in wildlifeLayout\n\n\n    toggleSave() {\n      if (!this.isChecked) {\n        this.addNewSave();\n        this.isChecked = true;\n      } else {\n        this.removeSave();\n        this.isChecked = false;\n      }\n    }\n\n    removeSave() {\n      this.newRemoveEvent.emit(this.adviceGenericObject.Header);\n    }\n\n    addNewSave() {\n      const saveObj = {\n        Header: this.adviceGenericObject.Header,\n        Pathname: this.adviceGenericObject.Pathname,\n        Justification: this.adviceGenericObject.Justification,\n        BodyText: this.adviceGenericObject.BodyText,\n        Name: this.adviceGenericObject.Name,\n        Username: this.adviceGenericObject.Username,\n        Copyright: this.adviceGenericObject.Copyright,\n        Link: this.adviceGenericObject.Link\n      };\n      this.newSaveEvent.emit(saveObj);\n    }\n\n    ngOnInit() {}\n\n  }\n\n  WildlifeAdviceGenericComponent.ɵfac = function WildlifeAdviceGenericComponent_Factory(t) {\n    return new (t || WildlifeAdviceGenericComponent)(i0.ɵɵdirectiveInject(i1.MatDialog));\n  };\n\n  WildlifeAdviceGenericComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WildlifeAdviceGenericComponent,\n    selectors: [[\"app-wildlife-advice-generic\"]],\n    inputs: {\n      adviceGenericObject: \"adviceGenericObject\"\n    },\n    outputs: {\n      newSaveEvent: \"newSaveEvent\",\n      newRemoveEvent: \"newRemoveEvent\"\n    },\n    decls: 13,\n    vars: 3,\n    consts: [[1, \"card\"], [\"alt\", \"Advice_Image\", 3, \"src\"], [1, \"card-body\"], [1, \"Subheader\"], [1, \"card-text\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", \"mat-button\", \"\", 3, \"click\"], [\"multiple\", \"\"], [3, \"click\"]],\n    template: function WildlifeAdviceGenericComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"p\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function WildlifeAdviceGenericComponent_Template_button_click_7_listener() {\n          return ctx.openDialog(ctx.adviceGenericObject);\n        });\n        i0.ɵɵtext(8, \"See info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-button-toggle-group\", 6);\n        i0.ɵɵelementStart(10, \"mat-button-toggle\", 7);\n        i0.ɵɵlistener(\"click\", function WildlifeAdviceGenericComponent_Template_mat_button_toggle_click_10_listener() {\n          return ctx.toggleSave();\n        });\n        i0.ɵɵtext(11, \"Save to My Goals\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.adviceGenericObject.Pathname, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.adviceGenericObject.Header);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.adviceGenericObject.Justification);\n      }\n    },\n    directives: [i2.MatButton, i3.MatButtonToggleGroup, i3.MatButtonToggle],\n    styles: [\".card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{object-fit:none;height:200px;width:200px;border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.card[_ngcontent-%COMP%]{flex-direction:row}.mat-button-toggle-group[_ngcontent-%COMP%]{margin-left:7px;height:36px;align-items:center}.mat-button-toggle[_ngcontent-%COMP%]{background-color:#fff;color:#fff}.mat-button-toggle[_ngcontent-%COMP%]:hover{background-color:transparent;color:#fff!important}.mat-button-toggle-checked[_ngcontent-%COMP%]{background-color:#96e6a1;color:#96e6a1!important}@media screen and (max-width: 600px){.card[_ngcontent-%COMP%]{flex-direction:column}.card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{object-fit:fill;height:auto;width:auto;border-top-left-radius:.25rem;border-top-right-radius:.25rem;border-bottom-left-radius:0rem}}\"]\n  });\n  return WildlifeAdviceGenericComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}