{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/all-answers.service\";\nexport let DisplayUserResponseComponent = /*#__PURE__*/(() => {\n  class DisplayUserResponseComponent {\n    constructor(allAnswersService) {\n      this.allAnswersService = allAnswersService;\n      this.ourPollinatorsService = new Subscription();\n      /**********************************************************************\n      **********************************************************************\n      ************** LOGIC TO DISPLAY A USER'S ANSWERS TO THEM *************\n      **********************************************************************\n      ***********************************************************************/\n\n      this.ourSubheader = \"\";\n      this.ourPollinatorsService = this.allAnswersService.getAnswerUpdateListener().subscribe(retrievedAnswers => {\n        this.ourSubheader = this.getOurSubheader(retrievedAnswers);\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {\n      this.ourPollinatorsService.unsubscribe();\n    }\n\n    getOurSubheader(retrievedAnswers) {\n      let tempSubheader = \"\";\n      tempSubheader = tempSubheader + \"<p> You said you have <b>\" + this.getSoilString(retrievedAnswers.soil) + \"</b>, <b>\" + this.getPHString(retrievedAnswers.ph) + \"</b>. \" + \"You said you have <b>\" + this.getGardenSizeString(retrievedAnswers.gardenSize) + \"</b>, which experiences <b>\" + this.getShadinessString(retrievedAnswers.shade) + \"</b>. From your location we worked out that plants with a USDA hardiness level of <b>\" + retrievedAnswers.hardiness + \"</b> or above should be able to thrive in your garden.<br>\";\n      tempSubheader = tempSubheader + this.getOptionsString(retrievedAnswers) + \"</p>\";\n      return tempSubheader;\n    }\n\n    getSoilString(soil) {\n      if (soil == \"SoilLight\") {\n        return \"Light-Weight\";\n      } else if (soil == \"SoilMedium\") {\n        return \"Medium-Weight\";\n      } else {\n        return \"Heavy-Weight\";\n      }\n    }\n\n    getPHString(PH) {\n      if (PH == \"PHAcid\") {\n        return \"Acidic Soil\";\n      } else if (PH == \"PHNeutral\") {\n        return \"Neutral Soil\";\n      } else {\n        return \"Alkaline (Basic) Soil\";\n      }\n    }\n\n    getShadinessString(shadiness) {\n      if (shadiness == \"ShadeFull\") {\n        return \"Heavy Shade\";\n      } else if (shadiness == \"ShadeSemi\") {\n        return \"Medium Shade\";\n      } else {\n        return \"No Shade\";\n      }\n    }\n\n    getGardenSizeString(size) {\n      if (size == \"WindoxBox\") {\n        return \"A Window Box\";\n      } else if (size == \"OutdoorPlantPots\") {\n        return \"Outdoor Plant Pots\";\n      } else if (size == \"SmallGarden\") {\n        return \"A Small Garden\";\n      } else if (size == \"LargeGarden\") {\n        return \"A Large Garden\";\n      } else if (size == \"Allotment\") {\n        return \"An Allotment\";\n      } else {\n        return \"A Field or Multiple Fields\";\n      }\n    }\n\n    getOptionsString(retrievedAnswers) {\n      let responseArray = [];\n\n      if (retrievedAnswers.childFriendly != \"\") {\n        responseArray.push(\"<b>Child-friendly</b>\");\n      }\n\n      if (retrievedAnswers.cheap != \"\") {\n        responseArray.push(\"<b>Cheap</b>\");\n      }\n\n      if (retrievedAnswers.easy != \"\") {\n        responseArray.push(\"<b>Easy</b>\");\n      }\n\n      if (retrievedAnswers.renting != \"\") {\n        responseArray.push(\"<b>Good for Renters</b>\");\n      }\n\n      if (retrievedAnswers.pavedGardens != \"\") {\n        responseArray.push(\"<b>Good for Paved Gardens</b>\");\n      } //If no choices were made, return an empty string\n\n\n      if (responseArray.length == 0) {\n        return \"\";\n      } //If one choice was made, return it\n      else if (responseArray.length == 1) {\n        return \"You said you were particularly interested in suggestions which were: \" + responseArray[0];\n      } else {\n        let tempSubheader = \"You said you were particularly interested in suggestions which were: \";\n\n        for (let i = 0; i < responseArray.length - 2; i++) {\n          tempSubheader = tempSubheader + responseArray[i] + \", \";\n        }\n\n        tempSubheader = tempSubheader + responseArray[responseArray.length - 2] + \" \";\n        tempSubheader = tempSubheader + \"and \" + responseArray[responseArray.length - 1] + \".\";\n        return tempSubheader;\n      }\n    }\n\n  }\n\n  DisplayUserResponseComponent.ɵfac = function DisplayUserResponseComponent_Factory(t) {\n    return new (t || DisplayUserResponseComponent)(i0.ɵɵdirectiveInject(i1.AllAnswers));\n  };\n\n  DisplayUserResponseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DisplayUserResponseComponent,\n    selectors: [[\"app-display-user-response\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[1, \"userInfoHeader\", 3, \"innerHTML\"]],\n    template: function DisplayUserResponseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"innerHTML\", ctx.ourSubheader, i0.ɵɵsanitizeHtml);\n      }\n    },\n    styles: [\".userInfoHeader[_ngcontent-%COMP%]{text-align:center}\"]\n  });\n  return DisplayUserResponseComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}