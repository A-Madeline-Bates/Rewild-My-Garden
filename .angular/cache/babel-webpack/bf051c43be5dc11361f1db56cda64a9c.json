{"ast":null,"code":"import { Subject, Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./all-answers.service\";\nexport let AdviceService = /*#__PURE__*/(() => {\n  class AdviceService {\n    constructor(httpClient, allAnswersService) {\n      this.httpClient = httpClient;\n      this.allAnswersService = allAnswersService;\n      this.updatedAdvice = new Subject(); //Subscriptions to wildlife answers data\n\n      this.answersSub = new Subscription();\n      this.adviceSub = new Subscription(); //here we are subscribing to the listener\n\n      this.answersSub = this.allAnswersService.getAnswerUpdateListener().subscribe(retrievedAnswers => {\n        const ourGardenSize = retrievedAnswers.gardenSize;\n        let ourPersonalisationQuery = this.getPersonalisationString(retrievedAnswers); //Then use that data to filter API data for display\n\n        this.adviceSub = this.httpClient.get(\"https://rewildmygarden-api.azurewebsites.net/api/adviceData?SizeQueryType=\" + ourGardenSize + \"&Size=Y\" + ourPersonalisationQuery).subscribe(response => {\n          this.updatedAdvice.next(response);\n        }, err => {\n          console.log(err);\n        });\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    getPersonalisationString(retrievedAnswers) {\n      //If we do notadd to the string, api.js effectively finds by \" : \"- which captures everything, meaning no\n      //filter is applied\n      let ourString = \"\";\n\n      if (retrievedAnswers.childFriendly == \"true\") {\n        ourString = ourString + \"&ChildFriendlyQuery=ChildFriendly&ChildFriendlyResponse=Y\";\n      } else if (retrievedAnswers.cheap == \"true\") {\n        ourString = ourString + \"&CheapQuery=Cheap&CheapResponse=Y\";\n      }\n\n      if (retrievedAnswers.easy == \"true\") {\n        ourString = ourString + \"&EasyQuery=Easy&EasyResponse=Y\";\n      }\n\n      if (retrievedAnswers.renting == \"true\") {\n        ourString = ourString + \"&RentingQuery=Renting&RentingResponse=Y\";\n      }\n\n      if (retrievedAnswers.pavedGardens == \"true\") {\n        ourString = ourString + \"&PavedGardensQuery=PavedGardens&PavedGardensResponse=Y\";\n      }\n\n      return ourString;\n    }\n\n    getAnswerUpdateListener() {\n      return this.updatedAdvice.asObservable();\n    } //This is called whenever this component is about to be removed from the DOM\n\n\n    ngOnDestroy() {\n      //By calling our subscription at this point and unsubscribing, we are preventing memory leaks\n      this.answersSub.unsubscribe();\n      this.adviceSub.unsubscribe();\n    }\n\n  }\n\n  AdviceService.ɵfac = function AdviceService_Factory(t) {\n    return new (t || AdviceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AllAnswers));\n  };\n\n  AdviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdviceService,\n    factory: AdviceService.ɵfac,\n    providedIn: 'root'\n  });\n  return AdviceService;\n})();","map":null,"metadata":{},"sourceType":"module"}